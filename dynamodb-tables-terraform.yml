resource "aws_dynamodb_table" "kubernetes-code-releases" {
  name           = "kubernetes-code-releases"
  read_capacity  = 20
  write_capacity = 20
  hash_key       = "Releasenumber"
  range_key      = "dateandtime"
  
  # DynamoDB Stream must be enabled
  stream_enabled = true
  stream_view_type = "NEW_AND_OLD_IMAGES"

  server_side_encryption = {
    enabled = true
  }

  point_in_time_recovery = {
    enabled = true
  }

  attribute {
    name = "Releasenumber"
    type = "S"
  }

  attribute {
    name = "dateandtime"
    type = "S"
  }
 
  lifecycle {
    # Ignore the capacity changes to keep auto-scaling configuration
    ignore_changes = ["read_capacity","write_capacity"] 
  }
}

resource "aws_autoscaling_target" "dynamodb_table_read_target" {
  depends_on         = ["aws_dynamodb_table.kubernetes-code-releases"]
  max_capacity       = 200
  min_capacity       = 5
  resource_id        = "table/${aws_dynamodb_table.kubernetes-code-releases.name}"
  scalable_dimension = "dynamodb:table:ReadCapacityUnits"
  service_namespace  = "dynamodb"
}

resource "aws_autoscaling_target" "dynamodb_table_write_target" {
  depends_on         = ["aws_dynamodb_table.kubernetes-code-releases"]
  max_capacity       = 1000
  min_capacity       = 40
  resource_id        = "table/${aws_dynamodb_table.kubernetes-code-releases.name}"
  scalable_dimension = "dynamodb:table:WriteCapacityUnits"
  service_namespace  = "dynamodb"
}

resource "aws_autoscaling_policy" "dynamodb_table_read_policy" {
  depends_on         = ["aws_dynamodb_table.kubernetes-code-releases"]
  name               = "DynamoDBReadCapacityUtilization:${aws_autoscaling_target.dynamodb_table_read_target.resource_id}"
  policy_type        = "TargetTrackingScaling"
  resource_id        = "${aws_autoscaling_target.dynamodb_table_read_target.resource_id}"
  scalable_dimension = "${aws_autoscaling_target.dynamodb_table_read_target.scalable_dimension}"
  service_namespace  = "${aws_autoscaling_target.dynamodb_table_read_target.service_namespace}"

  target_tracking_scaling_policy_configuration {
    predefined_metric_specification {
      predefined_metric_type = "DynamoDBReadCapacityUtilization"
    }

    target_value = 75
  }
}

resource "aws_autoscaling_policy" "dynamodb_table_write_policy" {
  depends_on         = ["aws_dynamodb_table.kubernetes-code-releases"]
  name               = "DynamoDBWriteCapacityUtilization:${aws_autoscaling_target.dynamodb_table_write_target.resource_id}"
  policy_type        = "TargetTrackingScaling"
  resource_id        = "${aws_autoscaling_target.dynamodb_table_write_target.resource_id}"
  scalable_dimension = "${aws_autoscaling_target.dynamodb_table_write_target.scalable_dimension}"
  service_namespace  = "${aws_autoscaling_target.dynamodb_table_write_target.service_namespace}"

  target_tracking_scaling_policy_configuration {
    predefined_metric_specification {
      predefined_metric_type = "DynamoDBWriteCapacityUtilization"
    }

    target_value = 75
  }
}